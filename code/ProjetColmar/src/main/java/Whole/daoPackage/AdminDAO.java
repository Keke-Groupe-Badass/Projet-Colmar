/*
 * This code has been generated by the Rebel: a code generator for modern Java.
 *
 * Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
 */
package Whole.daoPackage;

import Whole.LinkToDb;
import Whole.exportPackage.ExportTypeInterface;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;

/**
 * Classe permettant à l'administrateur de gérer la base de donnée
 */
public class AdminDAO {

    /**
     * Constructeur de la classe
     */
    private ArrayList<ExportTypeInterface> listeMethode;
    private ArrayList<String> listeTable;
    public AdminDAO() {
    }

    /**
     * Permet de stocker dans un fichier la bd
     * @param file le fichier où sera exporter les données
     * @param cn La connection à la base de donnée
     * @see LinkToDb
     * @see Whole.exportPackage.ExportTypeInterface
     *
     */


    public Boolean exportDonee(File file,Connection cn, String methode, String path) {
        for(ExportTypeInterface e:listeMethode){
            if(e.getName().equals(methode)){
                if(e.getName().equals("SQL")){

                }
                else{
                    Boolean b = true;
                    ArrayList<ArrayList<String>> list =new ArrayList<ArrayList<String>>();
                    for(String st:listeTable){
                        list=getTableList(st);
                        File f = new File(path+"/"+st);
                        b = b && e.export(f,list );
                    }
                    return b;

                }
            }
        }
        return false;
    }
    public ArrayList<ArrayList<String>> getTableList(String table){
        return null;
    }


    /**
     * Permet de stocker dans un fichier les logs
     * @param cn La connection à la base de donnée
     * @param file le fichier où sera exporter les log
     * @see LinkToDb
     */


    public Boolean exportLog(File file,Connection cn)  {
        try {
            Statement stmt = cn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT `text`,`date`,`userLogin` FROM `log`");
            String str = "Hello";
            BufferedWriter bw = new BufferedWriter(new FileWriter(file));
            bw.write("Log exporté le "+System.currentTimeMillis());

            while(rs.next()){
                bw.newLine();
                str=rs.getString(2)+" par "+rs.getString(3)+": "+rs.getString(1);
                bw.write(str);

            }
            bw.close();

        }catch(SQLException e){
            System.err.println("something went wrong with the database link");
        } catch (IOException e) {
            System.err.println("something went wrong with the writing of the file");

        }
        return false;
    }

    /**
     * Supprime les logs de la bd
     * @param cn La connection à la base de donnée
     * @see LinkToDb
     *
     */
    public Boolean deleteLog(Connection cn) {
        Statement stm = null;
        try {
            stm = cn.createStatement();
            stm.execute("DELETE FROM `log`");
            return true;
        } catch (SQLException e) {
            System.err.println("something went wrong with the database link");
        }
        return false;
    }

    /**
     * Ajoute au log un text
     * @param txt Le message à enregistrer
     * @param user L'utilisateur qui a provoqué une action
     * @param cn La connection à la base de donnée
     * @see LinkToDb
     */
    public void writeLog(String txt, String user,Connection cn){

    }

}